# These substitutions allow the end user to override certain values
substitutions:
  name: "enviro-sensor"
  friendly_name: "Enviro Sensor"

esphome:
  name: "${name}"
  # Friendly names are used where appropriate in Home Assistant
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: bobbyschultz.enviro-sensor-template
    version: "1.0"

esp8266:
  board: esp01_1m

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:
  encryption:
    key: "EZ1ZEBjHJ/O/tCwE1CPlciMl7HPXZXt2IvM2PgQAb9w="

# OTA is required for Over-the-Air updating
ota:
  platform: esphome

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://bobbyschultz/enviro-sensor/enviro-sensor-template.yaml
  import_full_config: false # or true

wifi:
  # Set up a wifi access point
  ap:
    password: "password"

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
#esp32_improv:
#  authorizer: none

# Sets up the improv via serial client for Wi-Fi provisioning
#improv_serial:
#  next_url: https://example.com/project-template/manual?ip={{ip_address}}&name={{device_name}}&version={{esphome_version}}

sensor:
  - platform: dht
    pin: GPIO2
    temperature:
      name: "Temperature"
      filters:
        - offset: -8.0
    humidity:
      name: "Humidity"
      filters:
        - offset: -2.0
    update_interval: 30s